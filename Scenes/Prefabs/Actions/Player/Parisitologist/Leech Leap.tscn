[gd_scene load_steps=3 format=2]

[ext_resource path="res://Scenes/Prefabs/Custom Nodes/Action.tscn" type="PackedScene" id=1]

[sub_resource type="GDScript" id=1]
script/source = "extends Action


func _use(_targets):
	# Target 0 should be a leech, target 1 should be a character
# warning-ignore:return_value_discarded
	se_Parasite.new(character, _targets[1], 
		_targets[0]._time_left, _targets[0].power, 
		_targets[0].leech_fraction, _targets[0].icon)
	var r = character.resource[1]
	_targets[0].end_effect()
	character.resource[1] = r
	for t in _targets:
		deal_basic_damage(t)


#func _update_usability():
#	usable = true
#	return usable

# list of possible targets to start targeting
func possible_initial_targets():
	# This part is normal:
	var chars = character.turn_manager.targets_in_range(
	character, close_range, target_self, target_enemies, target_friendlies)
	
	# Now, get all parasites on those people.
	var leeches := []
	for chara in chars:
		for effect in chara.status_effects_active:
			if effect is se_Parasite:
				leeches.append(effect)
	
	return leeches


# Extra rules to follow when determining whether
# a target can be multitargetted after a given one.
func _custom_multitarget_follow_rules(_targets, _candidate) -> bool:
	return _candidate != _targets[0].affected
"

[node name="Leech Leap" instance=ExtResource( 1 )]
script = SubResource( 1 )
primary = false
close_range = false
target_self = true
skill_category = 2
attack_type = 2
power = 5
description = "Causes the targeted Leech to jump to another target, dealing a small amount of damage."
max_targets = 2
allow_same_target = false
multi_target_initial_max_range = 5
require_max_targets = true
multi_auto_bulk = false
