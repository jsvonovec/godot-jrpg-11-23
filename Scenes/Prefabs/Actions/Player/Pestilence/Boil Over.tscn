[gd_scene load_steps=4 format=3 uid="uid://be3np2h7ayfj6"]

[ext_resource type="PackedScene" uid="uid://436gah7qqhg" path="res://Scenes/Prefabs/Custom Nodes/Action.tscn" id="1"]
[ext_resource type="Texture2D" uid="uid://r46houbcd4y3" path="res://Sprites/green skull.png" id="2"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Action

# Called when the node enters the scene tree for the first time.
func _use(_targets):
	for target in _targets:
		for se in target.status_effects_active:
			match NIU.get_class_name(se):
				\"se_Poisoned\":
					target.take_damage(power, character,
					attack_type, atk_multiplier)
					break
				\"se_Poisoned_Badly\":
					target.take_damage(power, character,
					attack_type, atk_multiplier * 2.0)
					break
				\"se_Poisoned_Lethally\":
					target.take_damage(power, character,
					attack_type, atk_multiplier * 4.0)
					break



#func _update_usability():
#	usable = true
#	return usable

# list of possible targets to start targeting
func possible_initial_targets() -> Array:
	#character, close_range, target_self, 
	#target_enemies = true, target_friends = true
	var default = get_node(\"/root/TurnManager\").targets_in_range(
	character, melee, target_self, target_enemies, target_friendlies)
	for i in range(len(default) - 1, -1, -1):
		var p := false
		for se in default[i].status_effects_active:
			if \"se_Poisoned\" in NIU.get_class_name(se):
				p = true
				break
		if !p:
			default.remove_at(i)
	return default


# Extra rules to follow when determining whether
# a target can be multitargetted after a given one.
#func _custom_multitarget_follow_rules(_targets, _candidate) -> bool:
#	return true
"

[node name="Boil Over" instance=ExtResource("1")]
script = SubResource("1")
costs = Array[float]([25.0])
attack_type = 2
power = 45
icon = ExtResource("2")
description = "May only be used on poisoned targets. Damage is doubled for each stage the target is above Poisoned. Poison is levelled down after use."
sfx_default = 5
