[gd_scene load_steps=4 format=3 uid="uid://dcsfgiwqvw6sk"]

[ext_resource type="PackedScene" path="res://Scenes/Prefabs/Custom Nodes/Action.tscn" id="1"]
[ext_resource type="Texture2D" uid="uid://b55g2qrpb8ran" path="res://Sprites/Emoji/twe_candle.png" id="2"]

[sub_resource type="GDScript" id="1"]
script/source = "extends Action

@export var heal_fraction = 8

func _use(_targets):
	var heal = false
	for target in _targets:
		# remove 1 random debuff
		var ses = []
		for se in target.status_effects_active:
			if !se.is_buff and se.removable:
				ses.append(se)
		if len(ses) > 0:
			ses[randi() % len(ses)].end_effect()
			heal = true
	# heal
	if heal:
		character.heal(int(float(character.max_hp) / float(heal_fraction)))


#func _update_usability():
#	usable = true
#	return usable

# list of possible targets to start targeting
func possible_initial_targets() -> Array:
	var initial = get_node(\"/root/TurnManager\").targets_in_range(
	character, close_range, target_self, target_enemies, target_friendlies)
	var results = []
	# only allow targeting things with >=1 debuff
	for i in range(len(initial) - 1, -1, -1):
		for se in initial[i].status_effects_active:
			if !se.is_buff and se.removable:
				results.append(initial[i])
				break
	return results


# Extra rules to follow when determining whether
# a target can be multitargetted after a given one.
#func _custom_multitarget_follow_rules(_targets, _candidate) -> bool:
#	return true
"

[node name="Fester" instance=ExtResource("1")]
script = SubResource("1")
heal_fraction = 8
primary = false
close_range = false
costs = Array[float]([0.0, 0.0, 0.0, 10.0])
target_friendlies = false
attack_type = 2
power = 0
icon = ExtResource("2")
description = "Removes 1 debuff from an enemy and heals the user for 1/{heal_fraction} of their max HP."
sfx_default = 5
